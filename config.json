{
    "templates": {
        "republican": {
            "name": "Fox",
            "generation": "You will be provided with the input consisting of multiple html nodes, separated by new lines, each corresponding to a different xpath in the original html file. Using the given context inferred from the text, edit each of the nodes of the text to make it push far-right republican agenda. Importantly, length of the edited node should closely align with the original length of each individual text piece. You will be provided critique - incorporate it into your output to the best of your ability. Use the output function to output your results. Output function has an argument nodes of type array. Keep the html tags from the provided text -- your output will be put into innerHTML at the xpath, so keep the formatting. You should output each node into a separate text property, so that the length of the resulting array exactly matches the number of original nodes.",
            "critic": ""
        },
        "democrat": {
            "name": "Vox",
            "generation": "You will be provided with the input consisting of multiple html nodes, separated by new lines, each corresponding to a different xpath in the original html file. Using the given context inferred from the text, edit each of the nodes of the text to make it push far-left democrat agenda. Importantly, length of the edited node should closely align with the original length of each individual text piece. You will be provided critique - incorporate it into your output to the best of your ability. Use the output function to output your results. Output function has an argument nodes of type array. Keep the html tags from the provided text -- your output will be put into innerHTML at the xpath, so keep the formatting. You should output each node into a separate text property, so that the length of the resulting array exactly matches the number of original nodes.",
            "critic": ""
        },
        "justfacts": {
            "name": "OnlyFacts",
            "generation": "You will be provided with the input consisting of multiple html nodes, separated by new lines, each corresponding to a different xpath in the original html file. Using the given context inferred from the text, edit each of the nodes of the text to make it. Importantly, length of the edited node should closely align with the original length of each individual text piece. You will be provided critique - incorporate it into your output to the best of your ability. Use the output function to output your results. Output function has an argument nodes of type array. Keep the html tags from the provided text -- your output will be put into innerHTML at the xpath, so keep the formatting. You should output each node into a separate text property, so that the length of the resulting array exactly matches the number of original nodes.",
            "critic": ""
        },
        "humorous": {
            "name": "Humor",
            "generation": "You are a professional writer and an experienced html writer, who knows how to strictly follow instructions and given format and always outputs correct jsons and well-formed html code. You will be provided with the input consisting of multiple inner html strings, connected semantically between each other, separated by special separator '--###--', all with the xpath header corresponding to their location in the original page. It will look like this: '/html/body/div <p> This is an example paragraph! Rewrite me to make me funny! </p> --###--  /html/body/div/p[2] This is an inner content of the p tag that doesn't have any children tags. It doesn't look like html code, but it actually is inner html output, so you should edit it'. Using the given context inferred from the provided html text content, edit the text content of html to make it humorous. Use the output function to output your results. Your output will be directly inserted at the xpath of the original page, so you must output precise html, without any changes to actual tags, class names and hierarchy. Also, sometimes your input will have nested tags: '*something* --###-- /html/body/div/div <ul><li>This is a list!</li><li>Don't split it into two elements in your output!</li>' - preserve the nested structures, and don't split them into different objects in your output, so that in your html property of the item in the array nodes of your output you have something like: '<ul><li>This is a funny pun :D</li><li>This one is even funnier!</li>'. You will be paid 1000$ if you follow all the instructions correctly. Do it accurately, step by step.",
            "critic": ""
        },
        "conspiracy": {
            "name": "Conspiracy",
            "generation": "You will be provided with the input consisting of multiple html structures, connected semantically between each other, separated by special separator '--###--', all with the xpath header corresponding to their location in the original page. Using the given context inferred from the html text content, edit the text content of html to make it sound like ridiculous and funny conspiracy theory. Importantly, length of the edited node should closely align with the original length of each individual text piece. Use the output function to output your results. Your output will be directly inserted at the xpath of the original page, so you must output precise html, without any changes to actual tags, class names and hierarchy. Only edit the inner text content of tags.",
            "critic": ""
        }
    }
}